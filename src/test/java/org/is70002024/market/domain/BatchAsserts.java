package org.is70002024.market.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class BatchAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchAllPropertiesEquals(Batch expected, Batch actual) {
        assertBatchAutoGeneratedPropertiesEquals(expected, actual);
        assertBatchAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchAllUpdatablePropertiesEquals(Batch expected, Batch actual) {
        assertBatchUpdatableFieldsEquals(expected, actual);
        assertBatchUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchAutoGeneratedPropertiesEquals(Batch expected, Batch actual) {
        assertThat(expected)
            .as("Verify Batch auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchUpdatableFieldsEquals(Batch expected, Batch actual) {
        assertThat(expected)
            .as("Verify Batch relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getJob()).as("check job").isEqualTo(actual.getJob()))
            .satisfies(e -> assertThat(e.getRundate()).as("check rundate").isEqualTo(actual.getRundate()))
            .satisfies(e -> assertThat(e.getBatchstatus()).as("check batchstatus").isEqualTo(actual.getBatchstatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBatchUpdatableRelationshipsEquals(Batch expected, Batch actual) {
        // empty method
    }
}
