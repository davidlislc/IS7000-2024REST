package org.is70002024.market.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class WalletAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWalletAllPropertiesEquals(Wallet expected, Wallet actual) {
        assertWalletAutoGeneratedPropertiesEquals(expected, actual);
        assertWalletAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWalletAllUpdatablePropertiesEquals(Wallet expected, Wallet actual) {
        assertWalletUpdatableFieldsEquals(expected, actual);
        assertWalletUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWalletAutoGeneratedPropertiesEquals(Wallet expected, Wallet actual) {
        assertThat(expected)
            .as("Verify Wallet auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWalletUpdatableFieldsEquals(Wallet expected, Wallet actual) {
        assertThat(expected)
            .as("Verify Wallet relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getCredit()).as("check credit").isEqualTo(actual.getCredit()))
            .satisfies(e -> assertThat(e.getGiftcard()).as("check giftcard").isEqualTo(actual.getGiftcard()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertWalletUpdatableRelationshipsEquals(Wallet expected, Wallet actual) {
        // empty method
    }
}
