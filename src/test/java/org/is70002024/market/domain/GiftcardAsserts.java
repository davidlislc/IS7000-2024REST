package org.is70002024.market.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GiftcardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftcardAllPropertiesEquals(Giftcard expected, Giftcard actual) {
        assertGiftcardAutoGeneratedPropertiesEquals(expected, actual);
        assertGiftcardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftcardAllUpdatablePropertiesEquals(Giftcard expected, Giftcard actual) {
        assertGiftcardUpdatableFieldsEquals(expected, actual);
        assertGiftcardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftcardAutoGeneratedPropertiesEquals(Giftcard expected, Giftcard actual) {
        assertThat(expected)
            .as("Verify Giftcard auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftcardUpdatableFieldsEquals(Giftcard expected, Giftcard actual) {
        assertThat(expected)
            .as("Verify Giftcard relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getGiftcardamount()).as("check giftcardamount").isEqualTo(actual.getGiftcardamount()))
            .satisfies(e -> assertThat(e.getAddDate()).as("check addDate").isEqualTo(actual.getAddDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGiftcardUpdatableRelationshipsEquals(Giftcard expected, Giftcard actual) {
        // empty method
    }
}
